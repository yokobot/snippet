AWSTemplateFormatVersion: '2010-09-09'
Description: 'Provisioning aurora instance'

Outputs:
    AURORAINSTANCEID:
        Description: 'Aurora DB Instance ID'
        Value:
            !Ref AuroraInstance
        Export:
            Name: !Join
                - ''
                - - !Ref TagName
                  - !Ref Environment
                  - 'AURORAINSTANCEID'

Parameters:
    TagName:
        Description: 'For Name Tag'
        Type: 'String'
    Environment:
        AllowedValues:
            - dev
            - stg
            - prd
        Default: 'dev'
        Description: 'Environment (e.g. dev, stg, prd)'
        Type: 'String'
    DatabaseUser:
        Default: startupadmin
        Type: String
        Description: Database admin account name
        MinLength: 4
        MaxLength: 16
        AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
        ConstraintDescription: Name must begin with a letter and contain only alphanumeric characters
    DatabasePassword:
        NoEcho: true
        Type: String
        Description: Database admin account password
        MinLength: 6
        MaxLength: 41
        AllowedPattern: "[a-zA-Z0-9]*"
        ConstraintDescription: Password must contain only alphanumeric characters
    DatabaseName:
        Default: StartupDB
        Type: String
        Description: Database name
        MinLength: 1
        MaxLength: 30
        AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
        ConstraintDescription: Name must begin with a letter and contain only alphanumeric characters
    DatabaseEngine:
        Default: aurora
        Type: String
        Description: Database engines - Aurora MySQL or Aurora PostgreSQL
        ConstraintDescription: Choose an engine from the drop down
        AllowedValues:
            - aurora
            - aurora-postgresql
    EncryptionAtRest:
        Default: false
        Type: String
        Description: The optional flag for encryption at rest (db.t2.small and above)
        ConstraintDescription: Only true or false are allowed
        AllowedValues:
            - true
            - false
    DatabaseInstanceClass:
        Default: db.t2.small
        Type: String
        Description: "Database instance class, e.g. db.t2.micro (free tier) - Engine support: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html"
        ConstraintDescription: DB instance class not supported
        AllowedValues:
            - db.t2.small
            - db.t2.medium
            - db.t2.xlarge
            - db.r4.large
            - db.r4.xlarge
            - db.r4.2xlarge
            - db.r4.4xlarge
            - db.r4.8xlarge
            - db.r4.16xlarge
    # The database alarm configuration, currently not supported for Aurora PostgreSQL
    DatabaseAlarmMaxCpuPercent:
        Description: Database CPU % max for alarm (currently, Aurora MySQL only)
        Type: Number
        Default: 80
        MinValue: 1
        MaxValue: 99
        ConstraintDescription: Must be a percentage between 1-99%
    DatabaseAlarmReadLatencyMaxSeconds:
        Description: Read latency max for alarm (currently, Aurora MySQL only)
        Type: Number
        Default: 1
        MinValue: 1
    DatabaseAlarmWriteLatencyMaxSeconds:
        Description: Write latency max for alarm (currently, Aurora MySQL only)
        Type: Number
        Default: 1
        MinValue: 1
    DatabaseAlarmEvaluationPeriods:
        Description: The number of periods over which data is compared to the specified threshold (currently, Aurora MySQL only)
        Type: Number
        Default: 2
        MinValue: 2
    DatabaseAlarmEvaluationPeriodSeconds:
        Description: The time over which the specified statistic is applied. Specify time in seconds, in multiples of 60. Enhanced monitoring must be enabled if less than 500 seconds (currently, Aurora MySQL only)
        Type: Number
        Default: 300
        MinValue: 60
        ConstraintDescription: Must be at least 60 seconds
    EnhancedMonitoring:
        Default: false
        Type: String
        Description: The optional flag for enhanced monitoring (additional charges apply - https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html) (currently, Aurora MySQL only)
        ConstraintDescription: Only true or false are allowed
        AllowedValues:
            - true
            - false
    # Default is 200 MB
    DatabaseAlarmSwapUsageInBytes:
        Default: 209715200
        Type: Number
        Description: Number of swap usage bytes for alarm (if enabled - Aurora MySQL only)
        MinValue: 1
        ConstraintDescription: Enter a value of at least one byte
    EnableAlarms:
        Default: false
        Type: String
        Description: Set to true to enable (additional charges - https://aws.amazon.com/cloudwatch/pricing/ - currently, Aurora MySQL only)
        ConstraintDescription: Only true or false are allowed
        AllowedValues:
            - true
            - false
    InternalIp:
        Default: '10.0.0.0/16'
        Description: 'Intarnal ip.'
        Type: 'String'

Conditions:
    CreateProdResources: !Equals [ !Ref Environment, prd ]
    IsAuroraMySQL: !Equals [ !Ref DatabaseEngine, aurora ]
    AlarmsEnabled: !And
        - !Condition IsAuroraMySQL
        - !Equals [ !Ref EnableAlarms, true ]
    EnhancedMonitoringSupprtedAndEnabled: !And
        - !Condition AlarmsEnabled
        - !Equals [ !Ref EnhancedMonitoring, true ]

Resources:
    EnhancedMonitoringRole:
        Type: AWS::IAM::Role
        Condition: EnhancedMonitoringSupprtedAndEnabled
        Properties:
            Path: /
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Principal:
                          Service: monitoring.rds.amazonaws.com
                      Action: sts:AssumeRole
            ManagedPolicyArns:
                - arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole
    AuroraSubnetGroup:
        Type: AWS::RDS::DBSubnetGroup
        Properties:
            DBSubnetGroupDescription: Aurora subnet group
            SubnetIds:
                - Fn::ImportValue:
                    !Join
                        - ''
                        - - !Ref TagName
                          - !Ref Environment
                          - 'SubnetInternalAID'
                - Fn::ImportValue:
                    !Join
                        - ''
                        - - !Ref TagName
                          - !Ref Environment
                          - 'SubnetInternalCID'
            Tags:
                - Key: 'Name'
                  Value: !Join
                      - '-'
                      - - !Ref TagName
                        - 'aurora'
                        - 'subnet'
                        - !Ref Environment
    AuroraSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Access to aurora db instance
            VpcId:
                Fn::ImportValue:
                    !Join
                        - ''
                        - - !Ref TagName
                          - !Ref Environment
                          - 'VPCID'
            SecurityGroupIngress:
                #Ingressルールかく
                CidrIp: !Ref InternalIp
                Description: from internal NW
                FromPort: 0
                IpProtocol: -1
                ToPort: 65535
            Tags:
                - Key: 'Name'
                  Value: !Join
                     - '-'
                     - - !Ref TagName
                       - 'aurora-sg'
                       - !Ref Environment
    AuroraCluster:
        Type: AWS::RDS::DBCluster
        DependsOn: AuroraSubnetGroup
        Properties:
            Engine: !Ref DatabaseEngine
            MasterUsername: !Ref DatabaseUser
            MasterUserPassword: !Ref DatabasePassword
            DBSubnetGroupName: !Ref AuroraSubnetGroup
            StorageEncrypted: !Ref EncryptionAtRest
            DatabaseName: !Ref DatabaseName
            DBClusterParameterGroupName: !If [ IsAuroraMySQL,  default.aurora5.6, default.aurora-postgresql9.6 ]
            Port: !If [ IsAuroraMySQL,  3306, 5432 ]
            VpcSecurityGroupIds:
                - !Ref AuroraSecurityGroup
    AuroraInstance:
        Type: AWS::RDS::DBInstance
        DependsOn: AuroraCluster
        Properties:
            Engine: !Ref DatabaseEngine
            DBClusterIdentifier: !Ref AuroraCluster
            DBInstanceClass: !Ref DatabaseInstanceClass
            DBSubnetGroupName: !Ref AuroraSubnetGroup
            StorageEncrypted: !Ref EncryptionAtRest
            DBParameterGroupName: !If [ IsAuroraMySQL,  default.aurora5.6, default.aurora-postgresql9.6 ]
            MonitoringInterval: !If [ EnhancedMonitoringSupprtedAndEnabled, 60, 0 ]
            MonitoringRoleArn: !If [ EnhancedMonitoringSupprtedAndEnabled, !GetAtt EnhancedMonitoringRole.Arn, !Ref "AWS::NoValue" ]
            CopyTagsToSnapshot: true
            Tags:
                - Key: 'Name'
                  Value: !Join
                     - '-'
                     - - !Ref TagName
                       - 'aurora-instance'
                       - !Ref Environment
    AuroraInstance1:
        Type: AWS::RDS::DBInstance
        DependsOn: AuroraCluster
        Condition: CreateProdResources
        Properties:
            Engine: !Ref DatabaseEngine
            DBClusterIdentifier: !Ref AuroraCluster
            DBInstanceClass: !Ref DatabaseInstanceClass
            DBSubnetGroupName: !Ref AuroraSubnetGroup
            StorageEncrypted: !Ref EncryptionAtRest
            DBParameterGroupName: !If [ IsAuroraMySQL,  default.aurora5.6, default.aurora-postgresql9.6 ]
            MonitoringInterval: !If [ EnhancedMonitoringSupprtedAndEnabled, 60, 0 ]
            MonitoringRoleArn: !If [ EnhancedMonitoringSupprtedAndEnabled, !GetAtt EnhancedMonitoringRole.Arn, !Ref "AWS::NoValue" ]
            CopyTagsToSnapshot: true
            Tags:
                - Key: 'Name'
                  Value: !Join
                     - '-'
                     - - !Ref TagName
                       - 'aurora-instance'
                       - !Ref Environment
